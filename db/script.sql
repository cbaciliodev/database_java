--DDL
--LENGUAJE DE DEFINICION DE DATOS:

--CREAR BASE DE DATOS:
CREATE DATABASE REUNIONES;
--USAMOS LA BASE DE DATOS:
GO
USE REUNIONES;

--CREAMOS LA TABLA CARGOS:
CREATE TABLE TBL_CARGOS(
	ICOD_CARGO INT NOT NULL IDENTITY,
	VDESC_CARGO VARCHAR(100),
	PRIMARY KEY (ICOD_CARGO)
);

--REGISTRO EN LA TABLA CARGOS:
INSERT INTO TBL_CARGOS(VDESC_CARGO) VALUES ('COORDINADOR DEL CURSO DE CIENCIAS DE LA COMPUTACION');
INSERT INTO TBL_CARGOS(VDESC_CARGO) VALUES ('COORDINADOR DEL ARQUITECTURA DE COMPUTADORAS');
SELECT * FROM TBL_CARGOS;

--CREAMOS LA TABLA DOCENTES:
CREATE TABLE TBL_DOCENTES(
ICOD_DOCENTE INT NOT NULL IDENTITY,
VNOMBRE_DOCENTE VARCHAR(50),
VAPATERNO_DOCENTE VARCHAR(50),
VAMATERNO_DOCENTE VARCHAR(50),
FK_ICOD_CARGO INT NOT NULL,
PRIMARY KEY(ICOD_DOCENTE),
FOREIGN KEY (FK_ICOD_CARGO) REFERENCES TBL_CARGOS(ICOD_CARGO)
);
--REGISTRO EN LA TABLA DOCENTES:
INSERT INTO TBL_DOCENTES(VNOMBRE_DOCENTE,VAPATERNO_DOCENTE,VAMATERNO_DOCENTE,FK_ICOD_CARGO)
VALUES ('LUIS', 'VEGA','APELLIDO',1023);
SELECT * FROM TBL_DOCENTES;

--CREAMOS LA TABLA ACTIVIDADES:
CREATE TABLE TBL_ACTIVIDADES(
ICOD_ACTIVIDAD INT NOT NULL IDENTITY,
VDESC_ACTIVIDAD VARCHAR(250),
PRIMARY KEY(ICOD_ACTIVIDAD)
--FK_ICOD_DOCENTE INT NOT NULL,
--FOREIGN KEY (FK_ICOD_DOCENTE) REFERENCES TBL_DOCENTES(ICOD_DOCENTE)
);
--AGREGAMOS LA COLUMNA FECHA DE ACTIVISADES EN LA TABLA ACTIVIDADES:
ALTER TABLE TBL_ACTIVIDADES
ADD DFEC_ACTIVIDAD DATE

--REGISTRO EN LA TABLA ACTIVIDADES:
INSERT INTO TBL_ACTIVIDADES(VDESC_ACTIVIDAD,DFEC_ACTIVIDAD)
VALUES ('REUNION CON DOCENTES','2019-01-01');
SELECT * FROM TBL_ACTIVIDADES;
-- GETDATE() USAREMOS PARA LA INSERCION DE HORA SALIDA Y ENTRADA

--CREAMOS LA TABLA REUNIONES:
CREATE TABLE TBL_REUNIONES(
ICOD_REUNION INT NOT NULL IDENTITY,
DFEC_REUNION DATE,
DHENT_REUNION DATE,
DHSAL_REUNION DATE,
VLUGAR_REUNION VARCHAR(50),
FK_ICOD_DOCENTE INT NOT NULL,
PRIMARY KEY(ICOD_REUNION),
FOREIGN KEY (FK_ICOD_DOCENTE) REFERENCES TBL_DOCENTES(ICOD_DOCENTE)
);

--MODIFICAMOS LA COLUMNA HORA DE ENTRADA Y SALIDA EN LA TABLA REUNIONES:
ALTER TABLE TBL_REUNIONES
ALTER COLUMN DHENT_REUNION DATETIME
ALTER TABLE TBL_REUNIONES
ALTER COLUMN DHSAL_REUNION DATETIME

--REGISTRO EN LA TABLA REUNIONES:
INSERT INTO TBL_REUNIONES(DFEC_REUNION,DHENT_REUNION,DHSAL_REUNION,VLUGAR_REUNION,FK_ICOD_DOCENTE)
VALUES ('2019-01-01',GETDATE(),NULL,'AUDITORIO OLLANTAYTAMBO',1);

UPDATE TBL_REUNIONES
SET DHENT_REUNION = GETDATE()
WHERE TBL_REUNIONES.ICOD_REUNION = 1;

SELECT * FROM TBL_REUNIONES;

--CREAMOS LA TABLA TEMAS:
CREATE TABLE TBL_TEMAS(
ICOD_TEMA INT NOT NULL IDENTITY,
VDESC_TEMA VARCHAR(500),
CEST_TEMA CHAR(1) DEFAULT '1',
FK_ICOD_ACTIVIDAD INT NOT NULL,
FK_ICOD_REUNION INT NOT NULL,
PRIMARY KEY(ICOD_TEMA),
FOREIGN KEY (FK_ICOD_ACTIVIDAD) REFERENCES TBL_ACTIVIDADES(ICOD_ACTIVIDAD),
FOREIGN KEY (FK_ICOD_REUNION) REFERENCES TBL_REUNIONES(ICOD_REUNION)
);

--REGISTRO EN LA TABLA TEMAS:
INSERT INTO TBL_TEMAS(VDESC_TEMA,FK_ICOD_ACTIVIDAD,FK_ICOD_REUNION)
VALUES ('REVISION DE FORMATOS',1,1);

SELECT * FROM  TBL_TEMAS;

--CREAMOS LA TABLA ASIGNADO:
CREATE TABLE TBL_ASIGNADO(
FK_ICOD_TEMA INT NOT NULL,
FK_ICOD_DOCENTE INT NOT NULL,
FOREIGN KEY (FK_ICOD_TEMA) REFERENCES TBL_TEMAS(ICOD_TEMA),
FOREIGN KEY (FK_ICOD_DOCENTE) REFERENCES TBL_DOCENTES(ICOD_DOCENTE)
);

ALTER TABLE TBL_ASIGNADO
ADD  DFEC_ASIGNADO DATE
--REGISTRO EN LA TABLA ASIGNADO
INSERT INTO TBL_ASIGNADO(FK_ICOD_TEMA,FK_ICOD_DOCENTE,DFEC_ASIGNADO)
VALUES (1,1,'2019-10-01');
SELECT * FROM  TBL_ASIGNADO;


--DML
--LENGUAJE DE MANIPULACIOND DE DATOS

GO
CREATE PROCEDURE SP_LISTAR_CARGOS
AS
BEGIN
SELECT C.ICOD_CARGO,C.VDESC_CARGO
FROM DBO.TBL_CARGOS AS C
END;
--EJECUTAR
EXEC SP_LISTAR_CARGOS


GO
CREATE PROCEDURE SP_OBTEBER_CARGOS_ID(@ICOD_CARGO INT)
AS
BEGIN
SELECT C.ICOD_CARGO,C.VDESC_CARGO
FROM DBO.TBL_CARGOS AS C
WHERE C.ICOD_CARGO LIKE @ICOD_CARGO
END;
--EJECUTAR
EXEC SP_OBTEBER_CARGOS_ID 1


GO
CREATE PROCEDURE SP_INSERTAR_CARGOS(@VDESC_CARGO VARCHAR(100))
AS
BEGIN
INSERT INTO TBL_CARGOS(VDESC_CARGO) VALUES (@VDESC_CARGO);
END

GO
CREATE PROCEDURE SP_UPDATE_CARGOS(
@ICOD_CARGO INT,
@VDESC_CARGO VARCHAR(100)
)
AS
BEGIN
UPDATE TBL_CARGOS
SET VDESC_CARGO = @VDESC_CARGO
WHERE ICOD_CARGO = @ICOD_CARGO
END;

exec SP_UPDATE_CARGOS 1024,'as'

GO
CREATE PROCEDURE SP_DELETE_CARGO(@ICOD_CARGO INT)
AS
BEGIN
DELETE FROM TBL_CARGOS
WHERE ICOD_CARGO LIKE @ICOD_CARGO
END;

select * from TBL_CARGOS


/*
PROCEDURE DE PROFESORES
*/

select * from TBL_DOCENTES
GO
CREATE PROCEDURE SP_LISTAR_DOCENTES
AS
BEGIN
SELECT D.ICOD_DOCENTE,D.VNOMBRE_DOCENTE,D.VAPATERNO_DOCENTE,D.VAMATERNO_DOCENTE,C.VDESC_CARGO
FROM DBO.TBL_DOCENTES AS D
INNER JOIN DBO.TBL_CARGOS C 
ON D.FK_ICOD_CARGO = C.ICOD_CARGO
WHERE D.FK_ICOD_CARGO = C.ICOD_CARGO
END;
--EJECUTAR
EXEC SP_LISTAR_DOCENTES


GO
CREATE PROCEDURE SP_OBTEBER_DOCENTE_ID(@ICOD_DOCENTE INT)
AS
BEGIN
SELECT D.ICOD_DOCENTE,D.VNOMBRE_DOCENTE,D.VAPATERNO_DOCENTE,D.VAMATERNO_DOCENTE,C.VDESC_CARGO
FROM DBO.TBL_DOCENTES AS D
INNER JOIN DBO.TBL_CARGOS C 
ON D.FK_ICOD_CARGO LIKE C.ICOD_CARGO
WHERE C.ICOD_CARGO LIKE D.FK_ICOD_CARGO 
AND D.ICOD_DOCENTE LIKE @ICOD_DOCENTE;
END;
--EJECUTAR
EXEC SP_OBTEBER_DOCENTE_ID 1


GO
CREATE PROCEDURE SP_INSERTAR_DOCENTES(
@VNOMBRE_DOCENTE VARCHAR(50),
@VAPATERNO_DOCENTE VARCHAR(50),
@VAMATERNO_DOCENTE VARCHAR(50),
@FK_ICOD_CARGO INT
)
AS
BEGIN
INSERT INTO TBL_DOCENTES(VNOMBRE_DOCENTE,VAPATERNO_DOCENTE,VAMATERNO_DOCENTE,FK_ICOD_CARGO)
VALUES (@VNOMBRE_DOCENTE, @VAPATERNO_DOCENTE,@VAMATERNO_DOCENTE,@FK_ICOD_CARGO);
END

GO
CREATE PROCEDURE SP_UPDATE_DOCENTE(
@ICOD_DOCENTE INT,
@VNOMBRE_DOCENTE VARCHAR(50),
@VAPATERNO_DOCENTE VARCHAR(50),
@VAMATERNO_DOCENTE VARCHAR(50),
@FK_ICOD_CARGO INT
)
AS
BEGIN
UPDATE TBL_DOCENTES
SET VNOMBRE_DOCENTE = @VNOMBRE_DOCENTE,
VAPATERNO_DOCENTE = @VAPATERNO_DOCENTE,
VAMATERNO_DOCENTE = @VAMATERNO_DOCENTE
WHERE FK_ICOD_CARGO = @FK_ICOD_CARGO
AND ICOD_DOCENTE = ICOD_DOCENTE 
END;

exec SP_UPDATE_DOCENTE  1, 'A','B','Z',1
SELECT * FROM TBL_DOCENTES


GO
CREATE PROCEDURE SP_DELETE_DOCENTE(@ICOD_DOCENTE INT)
AS
BEGIN
DELETE FROM TBL_DOCENTES
WHERE ICOD_DOCENTE LIKE @ICOD_DOCENTE
END;

select * from TBL_CARGOS

/*
ACTIVIDADES
*/

GO
CREATE PROCEDURE SP_LISTAR_ACTIVIDADES
AS
BEGIN
SELECT A.ICOD_ACTIVIDAD,A.VDESC_ACTIVIDAD,A.DFEC_ACTIVIDAD
FROM DBO.TBL_ACTIVIDADES AS A
END;
--EJECUTAR
EXEC SP_LISTAR_ACTIVIDADES

GO
CREATE PROCEDURE SP_INSERTAR_ACTIVIDAD(
@VDESC_ACTIVIDAD VARCHAR(250),
@DFEC_ACTIVIDAD DATE
)
AS
BEGIN
INSERT INTO TBL_ACTIVIDADES(VDESC_ACTIVIDAD,DFEC_ACTIVIDAD)
VALUES (@VDESC_ACTIVIDAD, @DFEC_ACTIVIDAD);
END;

GO
CREATE PROCEDURE SP_OBTEBER_ACTIVIDAD_ID(@ICOD_ACTIVIDAD INT)
AS
BEGIN
SELECT A.ICOD_ACTIVIDAD,A.VDESC_ACTIVIDAD,A.DFEC_ACTIVIDAD
FROM DBO.TBL_ACTIVIDADES AS A
WHERE A.ICOD_ACTIVIDAD LIKE @ICOD_ACTIVIDAD;
END;
--EJECUTAR
EXEC SP_OBTEBER_ACTIVIDAD_ID 3
SELECT * FROM TBL_ACTIVIDADES

GO
CREATE PROCEDURE SP_UPDATE_ACTIVIDAD(
@ICOD_ACTIVIDAD INT,
@VDESC_ACTIVIDAD VARCHAR(250),
@DFEC_ACTIVIDAD DATE
)
AS
BEGIN
UPDATE TBL_ACTIVIDADES
SET VDESC_ACTIVIDAD = @VDESC_ACTIVIDAD,
DFEC_ACTIVIDAD = @DFEC_ACTIVIDAD
WHERE ICOD_ACTIVIDAD = @ICOD_ACTIVIDAD
END;


GO
CREATE PROCEDURE SP_DELETE_ACTIVIDAD(@ICOD_ACTIVIDAD INT)
AS
BEGIN
DELETE FROM TBL_ACTIVIDADES
WHERE ICOD_ACTIVIDAD LIKE @ICOD_ACTIVIDAD
END;

SELECT * FROM TBL_ACTIVIDADES