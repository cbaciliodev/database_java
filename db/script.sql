--DDL
--LENGUAJE DE DEFINICION DE DATOS:

--CREAR BASE DE DATOS:
CREATE DATABASE REUNIONES;
--USAMOS LA BASE DE DATOS:
GO
USE REUNIONES;

--CREAMOS LA TABLA CARGOS:
CREATE TABLE TBL_CARGOS(
	ICOD_CARGO INT NOT NULL IDENTITY,
	VDESC_CARGO VARCHAR(100),
	PRIMARY KEY (ICOD_CARGO)
);

--CREAMOS LA TABLA DOCENTES:
CREATE TABLE TBL_DOCENTES(
ICOD_DOCENTE INT NOT NULL IDENTITY,
VNOMBRE_DOCENTE VARCHAR(50),
VAPATERNO_DOCENTE VARCHAR(50),
VAMATERNO_DOCENTE VARCHAR(50),
FK_ICOD_CARGO INT NOT NULL,
PRIMARY KEY(ICOD_DOCENTE),
FOREIGN KEY (FK_ICOD_CARGO) REFERENCES TBL_CARGOS(ICOD_CARGO)
);
ALTER TABLE TBL_DOCENTES
ADD VDNI_DOCENTE VARCHAR(8)

--CREAMOS LA TABLA ACTIVIDADES:
CREATE TABLE TBL_ACTIVIDADES(
ICOD_ACTIVIDAD INT NOT NULL IDENTITY,
VDESC_ACTIVIDAD VARCHAR(250),
PRIMARY KEY(ICOD_ACTIVIDAD)
--FK_ICOD_DOCENTE INT NOT NULL,
--FOREIGN KEY (FK_ICOD_DOCENTE) REFERENCES TBL_DOCENTES(ICOD_DOCENTE)
);
--AGREGAMOS LA COLUMNA FECHA DE ACTIVISADES EN LA TABLA ACTIVIDADES:
ALTER TABLE TBL_ACTIVIDADES
ADD DFEC_ACTIVIDAD DATE

-- GETDATE() USAREMOS PARA LA INSERCION DE HORA SALIDA Y ENTRADA

--CREAMOS LA TABLA REUNIONES:
CREATE TABLE TBL_REUNIONES(
ICOD_REUNION INT NOT NULL IDENTITY,
DFEC_REUNION DATE,
DHENT_REUNION DATE,
DHSAL_REUNION DATE,
VLUGAR_REUNION VARCHAR(50),
VOBS_REUNION VARCHAR(1500),
PRIMARY KEY(ICOD_REUNION)
);
--MODIFICAMOS LA COLUMNA HORA DE ENTRADA Y SALIDA EN LA TABLA REUNIONES:
ALTER TABLE TBL_REUNIONES
ALTER COLUMN DHENT_REUNION DATETIME
ALTER TABLE TBL_REUNIONES
ALTER COLUMN DHSAL_REUNION DATETIME

/*
REGISTRO EN LA TABLA REUNIONES:
INSERT INTO TBL_REUNIONES(DFEC_REUNION,DHENT_REUNION,DHSAL_REUNION,VLUGAR_REUNION,FK_ICOD_DOCENTE)
VALUES ('2019-01-01',GETDATE(),NULL,'AUDITORIO OLLANTAYTAMBO',1);
UPDATE TBL_REUNIONES
SET DHENT_REUNION = GETDATE()
WHERE TBL_REUNIONES.ICOD_REUNION = 1;
*/


--CREAMOS LA TABLA TEMAS:
CREATE TABLE TBL_TEMAS(
ICOD_TEMA INT NOT NULL IDENTITY,
VDESC_TEMA VARCHAR(500),
CEST_TEMA CHAR(1) DEFAULT '1',
FK_ICOD_ACTIVIDAD INT NOT NULL,
--FK_ICOD_REUNION INT NOT NULL,
PRIMARY KEY(ICOD_TEMA),
FOREIGN KEY (FK_ICOD_ACTIVIDAD) REFERENCES TBL_ACTIVIDADES(ICOD_ACTIVIDAD),
--FOREIGN KEY (FK_ICOD_REUNION) REFERENCES TBL_REUNIONES(ICOD_REUNION)
);

--CREAMOS LA TABLA ASIGNADO:
CREATE TABLE TBL_ASIGNADO(
FK_ICOD_TEMA INT NOT NULL,
FK_ICOD_DOCENTE INT NOT NULL,
FOREIGN KEY (FK_ICOD_TEMA) REFERENCES TBL_TEMAS(ICOD_TEMA),
FOREIGN KEY (FK_ICOD_DOCENTE) REFERENCES TBL_DOCENTES(ICOD_DOCENTE)
);

CREATE TABLE TBL_REUNION_DOCENTES(
FK_ICOD_REUNION INT NOT NULL,
FK_ICOD_DOCENTE INT NOT NULL,
DHENT_REUNION DATETIME,
DHSAL_REUNION DATETIME,
FOREIGN KEY (FK_ICOD_REUNION) REFERENCES TBL_REUNIONES(ICOD_REUNION),
FOREIGN KEY (FK_ICOD_DOCENTE) REFERENCES TBL_DOCENTES(ICOD_DOCENTE)
);


ALTER TABLE TBL_ASIGNADO
ADD  DFEC_ASIGNADO DATE;

--DML
--LENGUAJE DE MANIPULACIOND DE DATOS

GO
CREATE PROCEDURE SP_LISTAR_CARGOS
AS
BEGIN
SELECT C.ICOD_CARGO,C.VDESC_CARGO
FROM DBO.TBL_CARGOS AS C
END;

GO
CREATE PROCEDURE SP_OBTEBER_CARGOS_ID(@ICOD_CARGO INT)
AS
BEGIN
SELECT C.ICOD_CARGO,C.VDESC_CARGO
FROM DBO.TBL_CARGOS AS C
WHERE C.ICOD_CARGO LIKE @ICOD_CARGO
END;

GO
CREATE PROCEDURE SP_INSERTAR_CARGOS(@VDESC_CARGO VARCHAR(100))
AS
BEGIN
INSERT INTO TBL_CARGOS(VDESC_CARGO) VALUES (@VDESC_CARGO);
END;

GO
CREATE PROCEDURE SP_UPDATE_CARGOS(
@ICOD_CARGO INT,
@VDESC_CARGO VARCHAR(100)
)
AS
BEGIN
UPDATE TBL_CARGOS
SET VDESC_CARGO = @VDESC_CARGO
WHERE ICOD_CARGO = @ICOD_CARGO
END;

GO
CREATE PROCEDURE SP_DELETE_CARGO(@ICOD_CARGO INT)
AS
BEGIN
DELETE FROM TBL_CARGOS
WHERE ICOD_CARGO LIKE @ICOD_CARGO
END;

/*
PROCEDURE DE PROFESORES
*/

GO
CREATE PROCEDURE SP_LISTAR_DOCENTES
AS
BEGIN
SELECT D.ICOD_DOCENTE,D.VNOMBRE_DOCENTE,D.VAPATERNO_DOCENTE,D.VAMATERNO_DOCENTE,C.VDESC_CARGO, D.VDNI_DOCENTE
FROM DBO.TBL_DOCENTES AS D
INNER JOIN DBO.TBL_CARGOS C 
ON D.FK_ICOD_CARGO = C.ICOD_CARGO
WHERE D.FK_ICOD_CARGO = C.ICOD_CARGO
END;
EXEC SP_LISTAR_DOCENTES
GO
CREATE PROCEDURE SP_OBTEBER_DOCENTE_ID(@ICOD_DOCENTE INT)
AS
BEGIN
SELECT D.ICOD_DOCENTE,D.VNOMBRE_DOCENTE,D.VAPATERNO_DOCENTE,D.VAMATERNO_DOCENTE,C.ICOD_CARGO,C.VDESC_CARGO, D.VDNI_DOCENTE
FROM DBO.TBL_DOCENTES AS D
INNER JOIN DBO.TBL_CARGOS C 
ON D.FK_ICOD_CARGO LIKE C.ICOD_CARGO
WHERE C.ICOD_CARGO LIKE D.FK_ICOD_CARGO 
AND D.ICOD_DOCENTE LIKE @ICOD_DOCENTE;
END;

GO
CREATE PROCEDURE SP_OBTEBER_DOCENTE_DNI(@VDNI_DOCENTE INT)
AS
BEGIN
SELECT D.ICOD_DOCENTE,D.VNOMBRE_DOCENTE,D.VAPATERNO_DOCENTE,D.VAMATERNO_DOCENTE,C.ICOD_CARGO,C.VDESC_CARGO, D.VDNI_DOCENTE
FROM DBO.TBL_DOCENTES AS D
INNER JOIN DBO.TBL_CARGOS C 
ON D.FK_ICOD_CARGO LIKE C.ICOD_CARGO
WHERE C.ICOD_CARGO LIKE D.FK_ICOD_CARGO 
AND D.ICOD_DOCENTE LIKE @ICOD_DOCENTE;
END;

GO
CREATE PROCEDURE SP_INSERTAR_DOCENTES(
@VNOMBRE_DOCENTE VARCHAR(50),
@VAPATERNO_DOCENTE VARCHAR(50),
@VAMATERNO_DOCENTE VARCHAR(50),
@FK_ICOD_CARGO INT,
@VDNI_DOCENTE VARCHAR(8)

)
AS
BEGIN
INSERT INTO TBL_DOCENTES(VNOMBRE_DOCENTE,VAPATERNO_DOCENTE,VAMATERNO_DOCENTE,FK_ICOD_CARGO,VDNI_DOCENTE)
VALUES (@VNOMBRE_DOCENTE, @VAPATERNO_DOCENTE,@VAMATERNO_DOCENTE,@FK_ICOD_CARGO,@VDNI_DOCENTE);
END;

GO
CREATE PROCEDURE SP_UPDATE_DOCENTE(
@ICOD_DOCENTE INT,
@VNOMBRE_DOCENTE VARCHAR(50),
@VAPATERNO_DOCENTE VARCHAR(50),
@VAMATERNO_DOCENTE VARCHAR(50),
@FK_ICOD_CARGO INT,
@VDNI_DOCENTE VARCHAR(8)
)
AS
BEGIN
UPDATE TBL_DOCENTES
SET VNOMBRE_DOCENTE = @VNOMBRE_DOCENTE,
VAPATERNO_DOCENTE = @VAPATERNO_DOCENTE,
VAMATERNO_DOCENTE = @VAMATERNO_DOCENTE,
VDNI_DOCENTE = @VDNI_DOCENTE
WHERE FK_ICOD_CARGO = @FK_ICOD_CARGO
AND ICOD_DOCENTE = @ICOD_DOCENTE 
END;


GO
CREATE PROCEDURE SP_DELETE_DOCENTE(@ICOD_DOCENTE INT)
AS
BEGIN
DELETE FROM TBL_DOCENTES
WHERE ICOD_DOCENTE LIKE @ICOD_DOCENTE
END;

/*
ACTIVIDADES
*/

GO
CREATE PROCEDURE SP_LISTAR_ACTIVIDADES
AS
BEGIN
SELECT A.ICOD_ACTIVIDAD,A.VDESC_ACTIVIDAD,A.DFEC_ACTIVIDAD
FROM DBO.TBL_ACTIVIDADES AS A
END;

GO
CREATE PROCEDURE SP_INSERTAR_ACTIVIDAD(
@VDESC_ACTIVIDAD VARCHAR(250),
@DFEC_ACTIVIDAD DATE
)
AS
BEGIN
INSERT INTO TBL_ACTIVIDADES(VDESC_ACTIVIDAD,DFEC_ACTIVIDAD)
VALUES (@VDESC_ACTIVIDAD, @DFEC_ACTIVIDAD);
END;

GO
CREATE PROCEDURE SP_OBTEBER_ACTIVIDAD_ID(@ICOD_ACTIVIDAD INT)
AS
BEGIN
SELECT A.ICOD_ACTIVIDAD,A.VDESC_ACTIVIDAD,A.DFEC_ACTIVIDAD
FROM DBO.TBL_ACTIVIDADES AS A
WHERE A.ICOD_ACTIVIDAD LIKE @ICOD_ACTIVIDAD;
END;

GO
CREATE PROCEDURE SP_UPDATE_ACTIVIDAD(
@ICOD_ACTIVIDAD INT,
@VDESC_ACTIVIDAD VARCHAR(250),
@DFEC_ACTIVIDAD DATE
)
AS
BEGIN
UPDATE TBL_ACTIVIDADES
SET VDESC_ACTIVIDAD = @VDESC_ACTIVIDAD,
DFEC_ACTIVIDAD = @DFEC_ACTIVIDAD
WHERE ICOD_ACTIVIDAD = @ICOD_ACTIVIDAD
END;

GO
CREATE PROCEDURE SP_DELETE_ACTIVIDAD(@ICOD_ACTIVIDAD INT)
AS
BEGIN
DELETE FROM TBL_ACTIVIDADES
WHERE ICOD_ACTIVIDAD LIKE @ICOD_ACTIVIDAD
END;

/*
TEMAS
*/

GO
CREATE PROCEDURE SP_LISTAR_TEMAS
AS
BEGIN
SELECT T.ICOD_TEMA,T.VDESC_TEMA,T.CEST_TEMA,T.FK_ICOD_ACTIVIDAD
FROM DBO.TBL_TEMAS AS T
END;

GO
CREATE PROCEDURE SP_INSERTAR_TEMA(
@VDESC_TEMA VARCHAR(500),
@FK_ICOD_ACTIVIDAD INT
)
AS
BEGIN
INSERT INTO TBL_TEMAS(VDESC_TEMA,CEST_TEMA,FK_ICOD_ACTIVIDAD)
VALUES (@VDESC_TEMA, '1',@FK_ICOD_ACTIVIDAD);
END;

GO
CREATE PROCEDURE SP_OBTEBER_TEMA_ID(@ICOD_TEMA INT)
AS
BEGIN
SELECT T.ICOD_TEMA,T.VDESC_TEMA,T.CEST_TEMA,A.ICOD_ACTIVIDAD,A.VDESC_ACTIVIDAD
FROM DBO.TBL_TEMAS AS T
INNER JOIN TBL_ACTIVIDADES AS A
ON T.FK_ICOD_ACTIVIDAD = A.ICOD_ACTIVIDAD
WHERE 
T.FK_ICOD_ACTIVIDAD = A.ICOD_ACTIVIDAD AND
T.ICOD_TEMA LIKE @ICOD_TEMA;
END;

GO
CREATE PROCEDURE SP_OBTEBER_LISTA_TEMA_ID(@ICOD_ACTIVIDAD INT)
AS
BEGIN
SELECT T.ICOD_TEMA,T.VDESC_TEMA,T.CEST_TEMA,A.ICOD_ACTIVIDAD,A.VDESC_ACTIVIDAD
FROM DBO.TBL_TEMAS AS T 
INNER JOIN DBO.TBL_ACTIVIDADES AS A
ON T.FK_ICOD_ACTIVIDAD = A.ICOD_ACTIVIDAD
WHERE T.FK_ICOD_ACTIVIDAD = A.ICOD_ACTIVIDAD
AND A.ICOD_ACTIVIDAD LIKE @ICOD_ACTIVIDAD
END;

GO
CREATE PROCEDURE SP_UPDATE_TEMA(
@ICOD_TEMA INT,
@VDESC_TEMA VARCHAR(500),
@FK_ICOD_ACTIVIDAD INT
)
AS
BEGIN
UPDATE TBL_TEMAS
SET VDESC_TEMA = @VDESC_TEMA,
FK_ICOD_ACTIVIDAD = @FK_ICOD_ACTIVIDAD
WHERE ICOD_TEMA = @ICOD_TEMA
END;


GO
CREATE PROCEDURE SP_DELETE_TEMA(@ICOD_TEMA INT)
AS
BEGIN
DELETE FROM TBL_TEMAS
WHERE ICOD_TEMA LIKE @ICOD_TEMA
END;


/*

ASIGNADO TEMA A DOCENTE
*/

GO
CREATE PROCEDURE SP_INSERTAR_ASIGNAR_TEMA_DOCENTE(
@FK_ICOD_TEMA INT,
@FK_ICOD_DOCENTE INT,
@DFEC_ASIGNADO DATE
)
AS
BEGIN
INSERT INTO TBL_ASIGNADO (FK_ICOD_TEMA,FK_ICOD_DOCENTE,DFEC_ASIGNADO)
VALUES (@FK_ICOD_TEMA,@FK_ICOD_DOCENTE,@DFEC_ASIGNADO)
END;

GO
CREATE PROCEDURE SP_LISTAR_TEMAS_DOCENTES
AS
BEGIN
SELECT	AD.FK_ICOD_TEMA,
		AD.FK_ICOD_DOCENTE,
		AD.DFEC_ASIGNADO,
		T.FK_ICOD_ACTIVIDAD,
		T.VDESC_TEMA,
		T.CEST_TEMA,
		T.FK_ICOD_ACTIVIDAD,
		D.ICOD_DOCENTE,
		D.VNOMBRE_DOCENTE,
		D.VAPATERNO_DOCENTE,
		D.VAMATERNO_DOCENTE,
		D.FK_ICOD_CARGO
FROM DBO.TBL_ASIGNADO AS AD 
INNER JOIN DBO.TBL_TEMAS AS T ON T.ICOD_TEMA = AD.FK_ICOD_TEMA 
INNER JOIN DBO.TBL_DOCENTES AS D ON D.ICOD_DOCENTE = AD.FK_ICOD_DOCENTE
WHERE T.ICOD_TEMA = AD.FK_ICOD_TEMA 
AND AD.FK_ICOD_DOCENTE = D.ICOD_DOCENTE
END;


GO
CREATE PROCEDURE SP_DELETE_ASIGNACION_TEMA_DOCENTE(
@FK_ICOD_TEMA INT,
@FK_ICOD_DOCENTE INT
)
AS
BEGIN
DELETE FROM TBL_ASIGNADO
WHERE FK_ICOD_TEMA = @FK_ICOD_TEMA
AND FK_ICOD_DOCENTE = @FK_ICOD_DOCENTE 
END;

/*
ASISTENCIA
*/

SELECT * FROM TBL_REUNIONES

GO
CREATE PROCEDURE SP_CREATE_REUNION(
@DFEC_REUNION DATE,
@DHENT_REUNION DATETIME,
@DHSAL_REUNION DATETIME,
@VLUGAR_REUNION VARCHAR(50),
@VOBS_REUNION VARCHAR(1000)


)
AS
BEGIN
INSERT INTO TBL_REUNIONES(DFEC_REUNION,DHENT_REUNION,DHSAL_REUNION,VLUGAR_REUNION,VOBS_REUNION)
VALUES(@DFEC_REUNION,@DHENT_REUNION,@DHSAL_REUNION,@VLUGAR_REUNION,@VOBS_REUNION)
END;

SELECT * FROM TBL_REUNIONES

GO
CREATE PROCEDURE SP_LISTAR_REUNIONES
AS
BEGIN
SELECT	R.ICOD_REUNION,
		R.DFEC_REUNION,
		R.DHENT_REUNION,
		R.DHSAL_REUNION,
		R.VLUGAR_REUNION,
		R.VOBS_REUNION
FROM TBL_REUNIONES AS R
END

DELETE FROM dbo.TBL_REUNIONES